只在 . 存在：1
只在 . 存在：Aaron
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/aentry.asm" ./aentry.asm
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/aentry.asm"	2022-08-23 19:44:51.561266000 +0800
--- ./aentry.asm	2023-07-08 11:00:24.168889513 +0800
***************
*** 9,19 ****
  [section .text]
  [bits 32]
  _start:
! AppModInit: ; 0xF000
      push ebp
      mov ebp, esp
      
!     mov dword [AppMainEntry], AppMain
      
      push HeapSize
      push AppHeapBase
--- 9,19 ----
  [section .text]
  [bits 32]
  _start:
! AppModInit:
      push ebp
      mov ebp, esp
      
!     mov dword [AppMainEntry], AppMain + BaseOfApp
  
      push HeapSize
      push AppHeapBase
***************
*** 25,28 ****
      leave
      
      ret
-     
--- 25,27 ----
只在 . 存在：app
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/app.c" ./app.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/app.c"	2022-08-23 19:44:51.561266000 +0800
--- ./app.c	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,9 ****
- 
  #include "shell.h"
  #include "syscall.h"
  
  void AppMain()
  {
!     RegApp("Shell", Shell, 255);
  }
  
--- 1,11 ----
  #include "shell.h"
  #include "syscall.h"
+ #include "const.h"
+ #include "screen.h"
+ #include "demo1.h"
  
  void AppMain()
  {
!     RegApp("Shell", Shell + BaseOfApp, 255);
  }
  
只在 . 存在：bins
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/blfunc.asm" ./blfunc.asm
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/blfunc.asm"	2022-08-23 19:44:51.565268000 +0800
--- ./blfunc.asm	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,29 ****
- 
  jmp short _start
  nop
  
! header:
!     BS_OEMName     db "D.T.Soft"
!     BPB_BytsPerSec dw 512
!     BPB_SecPerClus db 1
!     BPB_RsvdSecCnt dw 1
!     BPB_NumFATs    db 2
!     BPB_RootEntCnt dw 224
!     BPB_TotSec16   dw 2880
!     BPB_Media      db 0xF0
!     BPB_FATSz16    dw 9
!     BPB_SecPerTrk  dw 18
!     BPB_NumHeads   dw 2
!     BPB_HiddSec    dd 0
!     BPB_TotSec32   dd 0
!     BS_DrvNum      db 0
!     BS_Reserved1   db 0
!     BS_BootSig     db 0x29
!     BS_VolID       dd 0
!     BS_VolLab      db "D.T.OS-0.01"
!     BS_FileSysType db "FAT12   "
!     
! const:
      RootEntryOffset  equ 19
      RootEntryLength  equ 14
      SPInitValue      equ BaseOfStack - EntryItemLength
--- 1,7 ----
  jmp short _start
  nop
  
! define:
  	RootEntryOffset     equ 19
  	RootEntryLength     equ 14
      SPInitValue         equ BaseOfStack - EntryItemLength
***************
*** 32,37 ****
--- 10,37 ----
  	FatEntryOffset      equ 1
  	FatEntryLength      equ 9
  
+ header:
+     BS_OEMName     db "Aaron.op"	; 8 字节，格式化该磁盘的工具名称
+     BPB_BytsPerSec dw 512			; 每个扇区的字节数
+     BPB_SecPerClus db 1				; 每个簇的扇区数
+     BPB_RsvdSecCnt dw 1				; 保留扇区数，包括引导扇区和文件系统信息扇区
+     BPB_NumFATs    db 2				; FAT 表的个数
+     BPB_RootEntCnt dw 224			; 根目录区域所占用的条目数
+     BPB_TotSec16   dw 2880			; FAT32 之前使用的字段，表示总扇区数（16位）
+     BPB_Media      db 0xF0			; 介质描述符，指定介质类型1.44MB软盘是0xF0
+     BPB_FATSz16    dw 9				; FAT 表的扇区数（16 位）
+     BPB_SecPerTrk  dw 18			; 每个磁道的扇区数
+     BPB_NumHeads   dw 2				; 磁头数
+     BPB_HiddSec    dd 0				; 隐藏扇区数
+     BPB_TotSec32   dd 0				; FAT32 使用的字段，表示总扇区数（32 位）
+     BS_DrvNum      db 0				; 驱动器编号
+     BS_Reserved1   db 0				; 保留字段
+     BS_BootSig     db 0x29			; 扩展引导标志，指示是否有扩展引导记录
+     BS_VolID       dd 0				; 卷序列号，用于标识卷
+     BS_VolLab      db "AARON-0.01"	; 卷标，长度为 11 个字节，用于标识卷
+     BS_FileSysType db "FAT12   "	; 8 字节, 文件系统类型
+ 
+ 
  _start:
      jmp BLMain
  
***************
*** 49,60 ****
--- 49,62 ----
  	mov cx, RootEntryLength
  	mov bx, [bp + 10] ; mov bx, Buffer
  	
+ 	; 将根目录的文件内容复制到Buf处
  	call ReadSector
  	
  	mov si, [bp + 2] ; mov si, Target
  	mov cx, [bp + 4] ; mov cx, TarLen
  	mov dx, 0
  	
+ 	; 从Buf处的根目录文件中寻找要加载的程序
  	call FindEntry
  	
  	cmp dx, 0
***************
*** 64,71 ****
--- 66,75 ----
  	mov di, EntryItem
  	mov cx, EntryItemLength
  	
+ 	; 将找到的 要加载的程序 复制到指定位置
  	call MemCpy
  	
+ 	; 设置Fat表的起始地址
  	mov bp, sp
  	mov ax, FatEntryLength
  	mov cx, [BPB_BytsPerSec]
***************
*** 76,81 ****
--- 80,86 ----
  	mov ax, FatEntryOffset
  	mov cx, FatEntryLength
  	
+ 	; 将Fat表复制到 加载目标程序 之前
  	call ReadSector
  	
  	mov dx, [EntryItem + 0x1A]
***************
*** 83,88 ****
--- 88,97 ----
                       ; mov es, si
  	xor si, si
  
+ ; tip:
+ ; dx == fat index
+ ; si == target
+ ; bx == fat table address
  loading:
  	mov ax, dx
  	add ax, 31
***************
*** 90,101 ****
--- 99,115 ----
  	push dx
  	push bx
  	mov bx, si
+ 	; 将 要加载的程序 加载到 目标地址处，每次一个扇区
  	call ReadSector
  	pop bx
+ 	; 将原来dx的值弹出到cx,其存放的为 fat dex,调用FatVec要用
  	pop cx
+ 	; 读取下一个fat index（返回值）
  	call FatVec
+ 	; 若返回值大于等于0xFF7,即加载完毕
  	cmp dx, 0xFF7
  	jnb finish
+ 	; 若还没有读完，读取下一个扇区
  	add si, 512
      cmp si, 0
      jnz continue
***************
*** 116,122 ****
  ;     dx --> fat[index]
  FatVec:
      push cx
!     
      mov ax, cx
      shr ax, 1
      
--- 130,136 ----
  ;     dx --> fat[index]
  FatVec:
  	push cx
! 	;下面的操作在计算目前的实际的fat表地址，即 给定的索引 * 3 / 2
  	mov ax, cx
  	shr ax, 1
  	
***************
*** 126,230 ****
      
      pop ax
      
      and ax, 1
      jz even
      jmp odd
  
  even:    ; FatVec[j] = ( (Fat[i+1] & 0x0F) << 8 ) | Fat[i];
      mov dx, cx
      add dx, 1
      add dx, bx
      mov bp, dx
      mov dl, byte [bp]
      and dl, 0x0F
      shl dx, 8
      add cx, bx
      mov bp, cx
      or  dl, byte [bp]
      jmp return
      
  odd:     ; FatVec[j+1] = (Fat[i+2] << 4) | ( (Fat[i+1] >> 4) & 0x0F );
      mov dx, cx
      add dx, 2
      add dx, bx
      mov bp, dx
      mov dl, byte [bp]
      mov dh, 0
      shl dx, 4
      add cx, 1
      add cx, bx
      mov bp, cx
      mov cl, byte [bp]
      shr cl, 4
      and cl, 0x0F
      mov ch, 0
      or  dx, cx
  
  return: 
      ret
  
  ; ds:si --> source
  ; es:di --> destination
  ; cx    --> length
  MemCpy:
!     
      cmp si, di
      
!     ja btoe
!     
      add si, cx
      add di, cx
      dec si
      dec di
      
!     jmp etob
      
! btoe:
      cmp cx, 0
!     jz done
      mov al, [si]
      mov byte [di], al
      inc si
      inc di
      dec cx
!     jmp btoe
      
! etob: 
      cmp cx, 0
!     jz done
      mov al, [si]
!     mov byte [di], al
!     dec si
!     dec di
      dec cx
!     jmp etob
  
- done:   
      ret
  
  ; es:bx --> root entry offset address
  ; ds:si --> target string
! ; cx    --> target length
  ;
  ; return:
  ;     (dx !=0 ) ? exist : noexist
  ;        exist --> bx is the target entry
  FindEntry:
      push cx
      
      mov dx, [BPB_RootEntCnt]
      mov bp, sp
      
  find:
      cmp dx, 0
      jz noexist
      mov di, bx
      mov cx, [bp]
      push si
      call MemCmp
      pop si
      cmp cx, 0
      jz exist
      add bx, 32
      dec dx
      jmp find
--- 140,350 ----
  
  	pop ax
  
+ 	;ax里面的放的是之前除以2后的结果，
+ 	;因为余数放在ah中,所以这里根据ah的值来判断给的索引的奇偶性
  	and ax, 1
  	jz even
  	jmp odd
  	
  even:	; FatVec[j] = ( (Fat[i+1] & 0x0F) << 8 ) | Fat[i];
+ 	; cx == i
  	mov dx, cx
+ 	; dx == i+1
  	add dx, 1
+ 	; Fat[i+1]
  	add dx, bx
  	mov bp, dx
  	mov dl, byte [bp]
+ 	; (Fat[i+1] & 0x0F)
  	and dl, 0x0F
+ 	; (Fat[i+1] & 0x0F) << 8)
  	shl dx, 8
+ 	; Fat[i]
  	add cx, bx
  	mov bp, cx
+ 	; FatVec[j] = ( (Fat[i+1] & 0x0F) << 8 ) | Fat[i]
  	or dl, byte [bp]
  	jmp return
  
+ 	
  odd:	; FatVec[j+1] = (Fat[i+2] << 4) | ( (Fat[i+1] >> 4) & 0x0F );
+ 	; cx == i
  	mov dx, cx
+ 	; i+2
  	add dx, 2
+ 	; Fat[i+2]
  	add dx, bx
  	mov bp, dx
  	mov dl, byte [bp]
  	mov dh, 0
+ 	; (Fat[i+2] << 4)
  	shl dx, 4
+ 	; i+1
  	add cx, 1
+ 	; Fat[i+1]
  	add cx, bx
  	mov bp, cx
  	mov cl, byte [bp]
+ 	; (Fat[i+1] >> 4)
  	shr cl, 4
+ 	; (Fat[i+1] >> 4) & 0x0F )
  	and cl, 0x0F
  	mov ch, 0
+ 	; (Fat[i+2] << 4) | ( (Fat[i+1] >> 4) & 0x0F 
  	or dx, cx
  
  return:
  	ret
  
+ ; ax	==> logic sector num
+ ; cx	==> number of sector
+ ; es:bx	==> target address
+ ReadSector:
+     mov ah, 0x00
+     mov dl, [BS_DrvNum]
+     int 0x13
+ 	
+ 	push bx
+ 	push cx
+ 	
+ 	; 逻辑扇区号/柱面扇区数	==> 磁头号: 商 & 1	<== dh
+ 	;					==> 柱面号: 商 >> 1	<== ch
+ 	;					==> 扇区号: 余数 + 1	<== cl
+ 	; al: 长度(扇区) ch: 柱面号 cl: 起始扇区
+ 	; dh: 磁头号 dl: 驱动器号 
+ 	mov bl, [BPB_SecPerTrk]
+ 	div bl
+ 	; al ==> 商，ah ==> 余
+ 	; 磁头号 dh
+ 	mov dh, al
+ 	and dh, 1
+ 	; 柱面号 ch
+ 	mov ch, al
+ 	shr ch, 1
+ 	; 扇区号 cl
+ 	mov cl, ah
+ 	add cl, 1
+ 	; 驱动器号 dl
+ 	mov dl, [BS_DrvNum]
+ 	
+ 	; 长度(扇区) al
+ 	; 此两条指令可使用一条指令替换:
+ 	; pop cx; mov ax,cx ==> pop ax
+ 	pop ax
+ 	pop bx
+ 	
+ 	mov ah, 0x02
+ 	
+ read:
+ 	int 0x13
+ 	; 将数据读取到es:bx ==> Buf
+ 	; 如果读取出错跳转到read重新读取
+ 	jc read
+ 
+ 	ret
+ 
  ; ds:si --> source
  ; es:di --> destination
  ; cx    --> length
  MemCpy:
! 	; 判断源地址和目标地址的大小
! 	; 为了在复制前不破坏数据，如果 源 < 目标
! 	; 就需要从后向前复制，否则就正常复制
  	cmp si, di
+ 	; ja ==> 若si > di跳转
+ 	ja startToTail
  	
! 	; 若si < di 移动到末尾
  	add si, cx
  	add di, cx
  	dec si
  	dec di
+ 	jmp tailToStart
  
! tailToStart:
! 	cmp cx, 0
! 	jz cpdone
! 	mov al, [si]
! 	mov byte [di], al
! 	; 因为是从高向地复制，所有si di 每次都要减1
! 	dec si
! 	dec di
! 	dec cx
!  	jmp tailToStart
  
! startToTail:
  	cmp cx, 0
! 	jz cpdone
  	mov al, [si]
  	mov byte [di], al
  	inc si
  	inc di
  	dec cx
! 	jmp startToTail
! 	
! cpdone:
! 	ret
  
! ; ds:si --> source
! ; es:di --> destination
! ; cx    --> length
! ;
! ; return:
! ;        (cx == 0) ? equal : noequal
! MemCmp:
! 	
! compare:
! 	; 若cx为0,则相等，因为目标字符串自定的，那么它的长度cx是已知的
  	cmp cx, 0
! 	jz equal
! 	; 取出源地址存放的值
  	mov al, [si]
! 	; 将其与目标地址存放的值对比
! 	cmp al, byte [di]
! 	jz goon
! 	jmp unequal
! 
! goon:
! 	inc si
! 	inc di
  	dec cx
! 	jmp compare
! 	
! equal:
! unequal:
  	
  	ret
  
  ; es:bx --> root entry offset address
  ; ds:si --> target string
! ; cx    --> target string length
  ;
  ; return:
  ;     (dx != 0) ? exist : noexist
  ;        exist --> bx is the target entry
  FindEntry:
+ 	; 将cx入栈，之后每次循环都要使用
  	push cx
  	
+ 	; dx存入根目录所有条目数
  	mov dx, [BPB_RootEntCnt]
  	mov bp, sp
  
  find:
+ 	; 若dx等于0,则根目录遍历完毕
  	cmp dx, 0
  	jz noexist
+ 	; 将当前根目录条目赋值给di
  	mov di, bx
+ 	; 每次都把栈顶的值给cx,栈顶存放的是之前压入的cx的值
  	mov cx, [bp]
  	push si
  	call MemCmp
  	pop si
+ 	; cx为memCmp返回值
  	cmp cx, 0
  	jz exist
+ 	; 每个条目占32字节，循环后每次 +32
  	add bx, 32
  	dec dx
  	jmp find
***************
*** 232,296 ****
  exist:
  noexist: 
      pop cx
-        
-     ret
- 
- ; ds:si --> source
- ; es:di --> destination
- ; cx    --> length
- ;
- ; return:
- ;        (cx == 0) ? equal : noequal
- MemCmp:
- 
- compare:
-     cmp cx, 0
-     jz equal
-     mov al, [si]
-     cmp al, byte [di]
-     jz goon
-     jmp noequal
- goon:
-     inc si
-     inc di
-     dec cx
-     jmp compare
-     
- equal: 
- noequal:   
- 
-     ret
- 
- 
- ; ax    --> logic sector number
- ; cx    --> number of sector
- ; es:bx --> target address
- ReadSector:
-     
-     mov ah, 0x00
-     mov dl, [BS_DrvNum]
-     int 0x13
-     
-     push bx
-     push cx
-     
-     mov bl, [BPB_SecPerTrk]
-     div bl
-     mov cl, ah
-     add cl, 1
-     mov ch, al
-     shr ch, 1
-     mov dh, al
-     and dh, 1
-     mov dl, [BS_DrvNum]
-     
-     pop ax
-     pop bx
-     
-     mov ah, 0x02
- 
- read:    
-     int 0x13
-     jc read
-     
      ret
--- 352,355 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/bochsrc" ./bochsrc
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/bochsrc"	2022-08-23 19:44:51.565268000 +0800
--- ./bochsrc	2023-07-08 20:24:10.415353022 +0800
***************
*** 10,17 ****
  vgaromimage: file=/usr/share/vgabios/vgabios.bin
  
  # what disk images will be used
! # floppya: 1_44=freedos.img, status=inserted
! floppya: 1_44=D.T.OS, status=inserted
  ata0: enabled=1, ioaddr1=0x1f0, ioaddr2=0x3f0, irq=14
  ata0-master: type=disk, path="hd.img", mode=flat, cylinders=162, heads=16, spt=63
  
--- 10,16 ----
  vgaromimage: file=/usr/share/vgabios/vgabios.bin
  
  # what disk images will be used
! floppya: 1_44=Aaron, status=inserted
  ata0: enabled=1, ioaddr1=0x1f0, ioaddr2=0x3f0, irq=14
  ata0-master: type=disk, path="hd.img", mode=flat, cylinders=162, heads=16, spt=63
  
***************
*** 25,28 ****
  mouse: enabled=0
  
  # enable key mapping, using US layout as default.
! keyboard_mapping: enabled=1, map=/usr/local/share/bochs/keymaps/x11-pc-us.map
--- 24,28 ----
  mouse: enabled=0
  
  # enable key mapping, using US layout as default.
! #keyboard_mapping: enabled=1, map=/usr/local/share/bochs/keymaps/x11-pc-us.map
! keyboard:keymap=/usr/local/share/bochs/keymaps/x11-pc-us.map
只在 . 存在：boot
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/boot.asm" ./boot.asm
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/boot.asm"	2022-08-23 19:44:51.565268000 +0800
--- ./boot.asm	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,20 ****
- 
  %include "blfunc.asm"
  %include "common.asm"
  
  org BaseOfBoot
  
- 
  BaseOfStack    equ    BaseOfBoot
  
  Loader db  "LOADER     "
  LdLen  equ ($-Loader)
  
  BLMain:
!     mov ax, cs
!     mov ss, ax
      mov ds, ax
      mov es, ax
      mov sp, SPInitValue
      
      push word Buffer
--- 1,20 ----
  %include "blfunc.asm"
  %include "common.asm"
  
  org BaseOfBoot
  
  BaseOfStack		equ		BaseOfBoot
  
  Loader db  "LOADER     "
  LdLen  equ ($-Loader)
  
  BLMain:
! 	;所有段寄存器都设置为代码段(cs)
! 	;以便访问同一段数据
! 	mov ax, cs				;不可以直接在段寄存器之间赋值，要间接
  	mov ds, ax
  	mov es, ax
+ 	mov ss, ax
  	mov sp, SPInitValue
  
  	push word Buffer
***************
*** 26,40 ****
      call LoadTarget
      
      cmp dx, 0
!     jz output
      
      jmp BaseOfLoader
      
! output:    
      mov ax, cs
      mov es, ax
!     mov bp, ErrStr
!     mov cx, ErrLen
      xor dx, dx
      mov ax, 0x1301
      mov bx, 0x0007
--- 26,40 ----
  	call LoadTarget
  
  	cmp dx, 0
! 	jz err
  
  	jmp BaseOfLoader
  	
! err:
  	mov ax, cs
  	mov es, ax
! 	mov bp, errStr
! 	mov cx, errLen
  	xor dx, dx
  	mov ax, 0x1301
  	mov bx, 0x0007
***************
*** 42,50 ****
      
      jmp $    
  
! ErrStr db  "NOLD"    
! ErrLen equ ($-ErrStr)
  
  Buffer:
!     times 510-($-$$) db 0x00
!     db 0x55, 0xaa
--- 42,53 ----
      
  	jmp $    
  
! 
! errStr	db	"NO LOADER..."		; 要打印的字符串
! errLen	equ	($-errStr)			; 字符串长度
  
  Buffer:
! 	times 510-($-$$) db 0x00	; times :重复 (510-($-$$)) 次 "db 00"
! 	; 后面还有两个字节，所以上一行使用的是510
! 	dw 0xaa55					; 以此结尾，表示这是一个可启动的扇区
! 
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/common.asm" ./common.asm
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/common.asm"	2022-08-23 19:44:51.565268000 +0800
--- ./common.asm	2023-07-08 13:31:19.072478212 +0800
***************
*** 10,20 ****
  BaseOfBoot    equ    0x7C00
  BaseOfLoader  equ    0x9000
  BaseOfKernel  equ    0xB000
! BaseOfApp     equ    0xF000
  
  BaseOfSharedMemory   equ    0xA000
  
- 
  ; Shared Value Address
  GdtEntry             equ       BaseOfSharedMemory + 0
  GdtSize              equ       BaseOfSharedMemory + 4
--- 10,19 ----
  BaseOfBoot    equ    0x7C00
  BaseOfLoader  equ    0x9000
  BaseOfKernel  equ    0xB000
! BaseOfApp     equ    0x12000
  
  BaseOfSharedMemory   equ    0xA000
  
  ; Shared Value Address
  GdtEntry            equ       BaseOfSharedMemory + 0
  GdtSize             equ       BaseOfSharedMemory + 4
***************
*** 55,69 ****
  SLAVE_ISR_PORT                          equ     0xA0
  
  ; Segment Attribute
! DA_32       equ    0x4000
  DA_LIMIT_4K    EQU       0x8000
! DA_DR       equ    0x90
! DA_DRW      equ    0x92
! DA_DRWA     equ    0x93
! DA_C        equ    0x98
! DA_CR       equ    0x9A
! DA_CCO      equ    0x9C
! DA_CCOR     equ    0x9E
  
  ; Segment Privilege
  DA_DPL0        equ      0x00    ; DPL = 0
--- 54,69 ----
  SLAVE_ISR_PORT                          equ     0xA0
  
  ; Segment Attribute
! DA_32    equ    0x4000		; 32 位段
  DA_LIMIT_4K    EQU       0x8000
! 
! DA_DR    equ    0x90		; 只读数据段
! DA_DRW   equ    0x92		; 可读写数据段
! DA_DRWA  equ    0x93		; 已访问可读写数据段
! DA_C     equ    0x98		; 只执行代码段
! DA_CR    equ    0x9A		; 可执行可读代码段
! DA_CCO   equ    0x9C		; 只执行一致代码段
! DA_CCOR  equ    0x9E		; 可执行可读一致代码段
  
  ; Segment Privilege
  DA_DPL0         equ     0x00    ; DPL = 0
***************
*** 85,92 ****
  SA_RPL2    equ    2
  SA_RPL3    equ    3
  
! SA_TIG    equ    0
! SA_TIL    equ    4
  
  PG_P    equ    1    ; 页存在属性位
  PG_RWR  equ    0    ; R/W 属性位值, 读/执行
--- 85,92 ----
  SA_RPL2    equ    2
  SA_RPL3    equ    3
  
! SA_TIG    equ    0			; GDT 选择子
! SA_TIL    equ    4			; LDT 选择子
  
  PG_P    equ    1            ; 页存在属性位
  PG_RWR  equ    0            ; R/W 属性位值, 读/执行
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/const.h" ./const.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/const.h"	2022-08-23 19:44:51.565268000 +0800
--- ./const.h	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,9 ****
- 
  #ifndef CONST_H
  #define CONST_H
  
- #define NULL  ((void*)0)
- 
  #define HeapBase       0x70000
  #define HeapSize       0x20000
  #define KernelHeapBase HeapBase
--- 1,6 ----
***************
*** 14,20 ****
  #define AppStackSize    512
  
  #define BaseOfKernel    0xB000
! #define BaseOfApp       0xF000
  
  #define BaseOfSharedMemory 0xA000
  #define AppMainEntry       (BaseOfSharedMemory + 36)
--- 11,17 ----
  #define AppStackSize    512
  
  #define BaseOfKernel    0xB000
! #define BaseOfApp       0x12000
  
  #define BaseOfSharedMemory 0xA000
  #define AppMainEntry       (BaseOfSharedMemory + 36)
***************
*** 36,42 ****
  #define    SA_TIG        0
  #define    SA_TIL        4
  
- 
  #define    DA_32            0x4000
  #define    DA_LIMIT_4K        0x8000
  
--- 33,38 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/demo1.h" ./demo1.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/demo1.h"	2022-08-23 19:44:51.565268000 +0800
--- ./demo1.h	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,8 ****
- 
  #ifndef DEMO1_H
  #define DEMO1_H
  
  void RunDemo1();
  
  #endif
- 
--- 1,7 ----
  #ifndef DEMO1_H
  #define DEMO1_H
  
+ 
  void RunDemo1();
  
  #endif
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/demo2.h" ./demo2.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/demo2.h"	2022-08-23 19:44:51.565268000 +0800
--- ./demo2.h	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,4 ****
- 
  #ifndef DEMO2_H
  #define DEMO2_H
  
--- 1,3 ----
/home/kali/桌面/门徒进阶课/2 - 深入浅出操作系统/test/第80课 - 硬盘驱动程序设计（下）/第80课 - 硬盘驱动程序设计（下）/代码/D.T.OS/deps 和 ./deps 有共同的子目录
只在 /home/kali/桌面/门徒进阶课/2 - 深入浅出操作系统/test/第80课 - 硬盘驱动程序设计（下）/第80课 - 硬盘驱动程序设计（下）/代码/D.T.OS/ 存在：elf2kobj
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/event.c" ./event.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/event.c"	2022-08-23 19:44:51.569270000 +0800
--- ./event.c	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,4 ****
- 
  #include "event.h"
  #include "memory.h"
  
--- 1,3 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/event.h" ./event.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/event.h"	2022-08-23 19:44:51.569270000 +0800
--- ./event.h	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,4 ****
- 
  #ifndef EVENT_H
  #define EVENT_H
  
--- 1,3 ----
只在 . 存在：global.c
只在 . 存在：global.h
二进制文件 /home/kali/桌面/门徒进阶课/2 - 深入浅出操作系统/test/第80课 - 硬盘驱动程序设计（下）/第80课 - 硬盘驱动程序设计（下）/代码/D.T.OS/hd.img 和 ./hd.img 不同
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/ihandler.c" ./ihandler.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/ihandler.c"	2022-08-23 19:44:51.865418000 +0800
--- ./ihandler.c	2023-07-08 13:31:19.072478212 +0800
***************
*** 1,9 ****
- 
- #include "interrupt.h"
- #include "keyboard.h"
  #include "task.h"
! #include "mutex.h"
  #include "screen.h"
  #include "sysinfo.h"
  
  extern byte ReadPort(ushort port);
--- 1,8 ----
  #include "task.h"
! #include "global.h"
  #include "screen.h"
+ #include "mutex.h"
+ #include "keyboard.h"
  #include "sysinfo.h"
  
  extern byte ReadPort(ushort port);
***************
*** 33,39 ****
      SendEOI(MASTER_EOI_PORT);
  }
  
! void SysCallHandler(uint type, uint cmd, uint param1, uint param2)   // __cdecl__
  {  
      switch(type)
      {
--- 32,38 ----
      SendEOI(MASTER_EOI_PORT);
  }
  
! void SysCallHandler(uint type, uint cmd, uint param1, uint param2)
  {
      switch(type)
      {
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/ihandler.h" ./ihandler.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/ihandler.h"	2022-08-23 19:44:51.865418000 +0800
--- ./ihandler.h	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,4 ****
- 
  #ifndef IHANDLER_H
  #define IHANDLER_H
  
--- 1,3 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/interrupt.c" ./interrupt.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/interrupt.c"	2022-08-23 19:44:51.865418000 +0800
--- ./interrupt.c	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,17 ****
  #include "utility.h"
  #include "interrupt.h"
  #include "ihandler.h"
! 
! void (* const InitInterrupt)() = NULL;
! void (* const SendEOI)(uint port) = NULL;
  
  void IntModInit()
  {
!     SetIntHandler(AddrOff(gIdtInfo.entry, 0x0D), (uint)SegmentFaultHandlerEntry);
!     SetIntHandler(AddrOff(gIdtInfo.entry, 0x0E), (uint)PageFaultHandlerEntry);
!     SetIntHandler(AddrOff(gIdtInfo.entry, 0x20), (uint)TimerHandlerEntry);
!     SetIntHandler(AddrOff(gIdtInfo.entry, 0x21), (uint)KeyboardHandlerEntry);
!     SetIntHandler(AddrOff(gIdtInfo.entry, 0x80), (uint)SysCallHandlerEntry);
      
      InitInterrupt();
  }
--- 1,16 ----
  #include "utility.h"
  #include "interrupt.h"
  #include "ihandler.h"
! #include "screen.h"
! #include "global.h"
  
  void IntModInit()
  {
!     SetIntHandler(AddrOff(gIdtInfo.entry, 0x0D), (uint)SegmentFaultHandlerEntry + BaseOfKernel);
!     SetIntHandler(AddrOff(gIdtInfo.entry, 0x0E), (uint)PageFaultHandlerEntry + BaseOfKernel);
!     SetIntHandler(AddrOff(gIdtInfo.entry, 0x20), (uint)TimerHandlerEntry + BaseOfKernel);
!     SetIntHandler(AddrOff(gIdtInfo.entry, 0x21), (uint)KeyboardHandlerEntry + BaseOfKernel);
!     SetIntHandler(AddrOff(gIdtInfo.entry, 0x80), (uint)SysCallHandlerEntry + BaseOfKernel);
  
      InitInterrupt();
  }
***************
*** 31,37 ****
      
      return ret;
  }
- 
  int GetIntHandler(Gate* pGate, uint* pIFunc)
  {
      int ret = 0;
--- 30,35 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/interrupt.h" ./interrupt.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/interrupt.h"	2022-08-23 19:44:51.865418000 +0800
--- ./interrupt.h	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,11 ****
- 
  #ifndef INTERRUPT_H
  #define INTERRUPT_H
  
  #include "kernel.h"
  
- extern void (* const EnableTimer)();
- extern void (* const SendEOI)(uint port);
  
  void IntModInit();
  int SetIntHandler(Gate* pGate, uint ifunc);
--- 1,8 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/kentry.asm" ./kentry.asm
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/kentry.asm"	2022-08-23 19:44:51.865418000 +0800
--- ./kentry.asm	2023-07-08 22:42:26.158976204 +0800
***************
*** 1,6 ****
--- 1,7 ----
  %include "common.asm"
  
  global _start
+ 
  global TimerHandlerEntry
  global KeyboardHandlerEntry
  global SysCallHandlerEntry
***************
*** 23,29 ****
  extern gGdtInfo
  extern gIdtInfo
  extern InitInterrupt
- extern EnableTimer
  extern SendEOI
  extern RunTask
  extern LoadTask
--- 24,29 ----
***************
*** 112,121 ****
      mov dword [RunTask], eax
      
      mov eax, dword [InitInterruptEntry]
!     mov dword [InitInterrupt], eax
      
      mov eax, dword [SendEOIEntry]
!     mov dword [SendEOI], eax
      
      mov eax, dword [LoadTaskEntry]
      mov dword [LoadTask], eax
--- 112,121 ----
      mov dword [RunTask], eax
  
      mov eax, dword [InitInterruptEntry]
!     mov [InitInterrupt], eax
  
      mov eax, dword [SendEOIEntry]
!     mov [SendEOI], eax
  
      mov eax, dword [LoadTaskEntry]
      mov dword [LoadTask], eax
只在 . 存在：kernel
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/kernel.c" ./kernel.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/kernel.c"	2022-08-23 19:44:51.865418000 +0800
--- ./kernel.c	2023-07-08 11:14:06.876852143 +0800
***************
*** 13,19 ****
          pDesc->base1         = base & 0xFFFF;
          pDesc->base2         = (base >> 16) & 0xFF;
          pDesc->attr1         = attr & 0xFF;
!         pDesc->attr2_limit2  = ((attr >> 8) & 0xF0) | ((limit >> 16) & 0xF);
          pDesc->base3         = (base >> 24) & 0xFF;
      }
      
--- 13,19 ----
          pDesc->base1        = base & 0xFFFF;
          pDesc->base2        = (base >> 16) & 0xFF;
          pDesc->attr1        = attr & 0xFF;
!         pDesc->attr2_limit2 = ((attr >> 8) & 0xF0) | ((limit >> 16) & 0x0F);
          pDesc->base3        = (base >> 24) & 0xFF;
      }
  
***************
*** 50,53 ****
          *addr = value;
      }
  }
- 
--- 50,52 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/kernel.h" ./kernel.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/kernel.h"	2022-08-23 19:44:51.865418000 +0800
--- ./kernel.h	2023-07-08 11:00:24.168889513 +0800
***************
*** 1,4 ****
- 
  #ifndef KERNEL_H
  #define KERNEL_H
  
--- 1,3 ----
***************
*** 32,39 ****
      const int    size;
  } IdtInfo;
  
- 
- 
  extern GdtInfo gGdtInfo;
  extern IdtInfo gIdtInfo;
  
--- 31,36 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/keyboard.c" ./keyboard.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/keyboard.c"	2022-08-23 19:44:51.865418000 +0800
--- ./keyboard.c	2023-07-08 11:00:24.168889513 +0800
***************
*** 5,11 ****
  #include "task.h"
  
  #define KB_BUFF_SIZE   8
- 
  typedef struct
  {
      uint head;
--- 5,10 ----
***************
*** 435,441 ****
  void KeyboardModInit()
  {
      Queue_Init(&gKeyWait);
-     
      gKCBuff.max = 2;
  }
  
--- 434,439 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/kmain.c" ./kmain.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/kmain.c"	2022-08-23 19:44:51.865418000 +0800
--- ./kmain.c	2023-07-09 14:08:37.668640496 +0800
***************
*** 1,18 ****
  #include "task.h"
  #include "interrupt.h"
  #include "screen.h"
  #include "memory.h"
  #include "mutex.h"
  #include "keyboard.h"
! 
! extern int gMemSize;
  
  void KMain()
  {
      void (*AppModInit)() = (void*)BaseOfApp;
      byte* pn = (byte*)0x475;
      
!     PrintString("D.T.OS\n");
      
      PrintString("GDT Entry: ");
      PrintIntHex((uint)gGdtInfo.entry);
--- 1,18 ----
  #include "task.h"
  #include "interrupt.h"
  #include "screen.h"
+ #include "global.h"
  #include "memory.h"
  #include "mutex.h"
  #include "keyboard.h"
! #include "hdraw.h"
  
  void KMain()
  {
      void (*AppModInit)() = (void *)BaseOfApp;
      byte* pn = (byte*)0x475;
  
!     PrintString("Aaron.OS\n");
  
      PrintString("GDT Entry: ");
      PrintIntHex((uint)gGdtInfo.entry);
***************
*** 38,45 ****
      
      KeyboardModInit();
      
!     MutexModInit();
      
      
      // AppModInit();
      
--- 38,57 ----
  
      KeyboardModInit();
  
!     pn = Malloc(512);
!     pn[1] = 0xEF;
!     pn[128] = 0xAB;
!     pn[511] = 0xCD;
! 
!     uint n = HDRawWrite(2, pn);
! 
!     PrintIntDec(n);
! 
!     // PrintIntHex(pn[1]);
!     // PrintIntHex(pn[128]);
!     // PrintIntHex(pn[511]);
  
+     MutexModInit();
  
      // AppModInit();
  
***************
*** 52,56 ****
      while(1);
      
      LaunchTask();
-     
  }
--- 64,67 ----
只在 . 存在：ld.script
只在 . 存在：learn.md
只在 . 存在：learnWithC
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/list.h" ./list.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/list.h"	2022-08-23 19:44:51.869420000 +0800
--- ./list.h	2023-07-08 11:00:24.172889513 +0800
***************
*** 3,8 ****
--- 3,9 ----
  
  #include "const.h"
  #include "utility.h"
+ #include "type.h"
  
  typedef struct _ListNode {
      struct _ListNode* next;
只在 . 存在：loader
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/loader.asm" ./loader.asm
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/loader.asm"	2022-08-23 19:44:51.873422000 +0800
--- ./loader.asm	2023-07-08 21:56:11.903102219 +0800
***************
*** 1,4 ****
- 
  %include "blfunc.asm"
  %include "common.asm"
  
--- 1,3 ----
***************
*** 13,19 ****
  
  [section .gdt]
  ; GDT definition
! ;                                       Base,         Limit,                Attribute
  GDT_ENTRY            :     Descriptor    0,            0,                   0
  CODE32_DESC          :     Descriptor    0,            Code32SegLen - 1,    DA_C + DA_32 + DA_DPL0
  VIDEO_DESC           :     Descriptor    0xB8000,      0x07FFF,             DA_DRWA + DA_32 + DA_DPL0
--- 12,18 ----
  
  [section .gdt]
  ; GDT definition
! ;						 				段基址，					段界限，				段属性
  GDT_ENTRY			:		Descriptor	0,							0,						0
  CODE32_DESC			:		Descriptor	0, 							Code32SegLen  - 1,		DA_C + DA_32 + DA_DPL0
  VIDEO_DESC			:		Descriptor	0xB8000, 					0x07FFF,				DA_DRWA + DA_32 + DA_DPL0
***************
*** 21,28 ****
  DATA32_FLAT_DESC     :     Descriptor    0,            0xFFFFF,             DA_DRW + DA_32 + DA_DPL0
  TASK_LDT_DESC        :     Descriptor    0,            0,                   0
  TASK_TSS_DESC        :     Descriptor    0,            0,                   0
! PAGE_DIR_DESC        :     Descriptor    PageDirBase,  4095,                DA_DRW + DA_32
  PAGE_TBL_DESC        :     Descriptor    PageTblBase,  1023,                DA_DRW + DA_LIMIT_4K + DA_32
  ; GDT end
  
  GdtLen    equ   $ - GDT_ENTRY
--- 20,28 ----
  DATA32_FLAT_DESC	:		Descriptor	0, 							0xFFFFF,				DA_DRW + DA_32 + DA_DPL0
  TASK_LDT_DESC		:		Descriptor	0,							0,						0
  TASK_TSS_DESC		:		Descriptor	0,							0,						0
! PAGE_DIR_DESC		:		Descriptor	PageDirBase,				4095,					DA_DRW + DA_LIMIT_4K + DA_32
  PAGE_TBL_DESC		:		Descriptor	PageTblBase,				1023,					DA_DRW + DA_LIMIT_4K + DA_32
+ 
  ; GDT end
  
  GdtLen	equ		$ - GDT_ENTRY
***************
*** 31,38 ****
            dw   GdtLen - 1
            dd   0
            
!           
! ; GDT Selector
  Code32Selector        equ (0x0001 << 3) + SA_TIG + SA_RPL0
  VideoSelector         equ (0x0002 << 3) + SA_TIG + SA_RPL0
  Code32FlatSelector    equ (0x0003 << 3) + SA_TIG + SA_RPL0
--- 31,37 ----
  	dw GdtLen - 1
  	dd 0
  
! ;GDT Selector 选择子
  Code32Selector			equ (0x0001 << 3) + SA_TIG + SA_RPL0
  VideoSelector			equ (0x0002 << 3) + SA_TIG + SA_RPL0
  Code32FlatSelector		equ (0x0003 << 3) + SA_TIG + SA_RPL0
***************
*** 70,79 ****
      mov sp, SPInitValue
      
      ; initialize GDT for 32 bits code segment
!     mov esi, CODE32_SEGMENT
      mov edi, CODE32_DESC
      
!     call InitDescItem
      
      ; initialize GDT pointer struct
      mov eax, 0
--- 69,78 ----
  	mov sp, SPInitValue
  
  	; initialize GDT for 32 bits code segment
! 	mov esi, CODE32_SEG
  	mov edi, CODE32_DESC
  
! 	call initDescItem
  
  	; initialize GDT pointer struct
  	mov eax, 0
***************
*** 103,109 ****
      cmp dx, 0
      jz AppErr
      
-     
      ; restore es register
      mov ax, cs
      mov es, ax
--- 102,107 ----
***************
*** 122,138 ****
      cmp dx, 0
      jz KernelErr
      
!     ; get hardware memory size
      call GetMemSize
      
!     ; store key global info for kernel
      call StoreGlobal
  
      ; 1. load GDT
      lgdt [GdtPtr]
      
      ; 2. close interrupt
-     ;    load IDT
      ;    set IOPL to 3
      cli 
      
--- 120,135 ----
      cmp dx, 0
      jz KernelErr
  
! 	;  获取硬盘容量
  	call GetMemSize
  
! 	;  为内核存储关键的全局信息
  	call StoreGlobal
  
  	; 1.load GDT
  	lgdt [GdtPtr]
  
  	; 2.close interrupt
  	; set IOPL to 3
  	cli
  
***************
*** 146,157 ****
      push eax
      popf
      
!     ; 3. open A20
      in al, 0x92
      or al, 00000010b
      out 0x92, al
      
!     ; 4. enter protect mode
      mov eax, cr0
      or eax, 0x01
      mov cr0, eax
--- 143,154 ----
  	push eax
  	popf
  
! 	; 3.open A20 地址线
  	in al, 0x92
  	or al, 00000010b
  	out 0x92, al
  
! 	; 4.enter protect mode 通知cpu进入保护模式
  	mov eax, cr0
  	or eax, 0x01
  	mov cr0, eax
***************
*** 160,170 ****
      jmp dword Code32Selector : 0
  
  AppErr:    
!     mov bp, NoApp
      mov cx, NALen
      jmp output
  KernelErr:
!     mov bp, NoKernel
      mov cx, NKLen
  output:
      mov ax, cs
--- 157,167 ----
  	jmp dword Code32Selector : 0
  	
  AppErr:    
!     mov bp, noApp
      mov cx, NALen
      jmp output
  KernelErr:
!     mov bp, noKernel
      mov cx, NKLen
  output:
      mov ax, cs
***************
*** 176,193 ****
      
      jmp $
  
  ; esi    --> code segment label
  ; edi    --> descriptor label
! InitDescItem:
      push eax
  
      mov eax, 0
      mov ax, cs
      shl eax, 4
      add eax, esi
!     mov word [edi + 2], ax
      shr eax, 16
      mov byte [edi + 4], al
      mov byte [edi + 7], ah
      
      pop eax
--- 173,211 ----
  
      jmp $
  
+ StoreGlobal:
+ 	mov dword [RunTaskEntry], RunTask
+ 	mov dword [LoadTaskEntry], LoadTask
+ 	mov dword [InitInterruptEntry], InitInterrupt
+ 	mov dword [SendEOIEntry], SendEOI
+ 
+ 	mov eax, dword [GdtPtr + 2]
+ 	mov dword [GdtEntry], eax
+ 
+ 	mov dword [GdtSize], GdtLen / 8
+ 
+ 	mov eax, dword [IdtPtr + 2]
+ 	mov dword [IdtEntry], eax
+ 
+ 	mov dword [IdtSize], IdtLen / 8
+ 
+ 	ret
+ 
  ; esi --> code segment label
  ; edi --> descriptor label
! initDescItem:
  	push eax
  
  	mov eax, 0
  	mov ax, cs
  	shl eax, 4
  	add eax, esi
! 	; 向描述符填充低0-15位基址
! 	mov [edi + 2], ax
  	shr eax, 16
+ 	; 填充16-23基址
  	mov byte [edi + 4], al
+ 	; 填充24-31基址
  	mov byte [edi + 7], ah
  
  	pop eax
***************
*** 225,250 ****
  getok:    
      ret
  
- ;
- ;
- StoreGlobal:
-     mov dword [RunTaskEntry], RunTask
-     mov dword [LoadTaskEntry], LoadTask
-     mov dword [InitInterruptEntry], InitInterrupt
-     mov dword [SendEOIEntry], SendEOI
-     
-     mov eax, dword [GdtPtr + 2]
-     mov dword [GdtEntry], eax
-     
-     mov dword [GdtSize], GdtLen / 8
-     
-     mov eax, dword [IdtPtr + 2]
-     mov dword [IdtEntry], eax
-     
-     mov dword [IdtSize], IdtLen / 8
-     
-     ret
- 
  [section .sfunc]
  [bits 32]
  ;
--- 243,248 ----
***************
*** 262,317 ****
      
      ; master
      ; ICW1
!     mov al, 00010001B
      out MASTER_ICW1_PORT, al
      
      call Delay
      
!     ; ICW2
!     mov al, 0x20
      out MASTER_ICW2_PORT, al
      
      call Delay
      
!     ; ICW3
!     mov al, 00000100B
      out MASTER_ICW3_PORT, al
      
      call Delay
      
!     ; ICW4
!     mov al, 00010001B
      out MASTER_ICW4_PORT, al
      
      call Delay
      
      ; slave
      ; ICW1
!     mov al, 00010001B
      out SLAVE_ICW1_PORT, al
      
      call Delay
      
!     ; ICW2
!     mov al, 0x28
      out SLAVE_ICW2_PORT, al
      
      call Delay
      
!     ; ICW3
!     mov al, 00000010B
      out SLAVE_ICW3_PORT, al
      
      call Delay
      
!     ; ICW4
!     mov al, 00000001B
      out SLAVE_ICW4_PORT, al
      
      call Delay
      
      pop ax
-     
      ret
      
  ; al --> IMR register value
--- 260,308 ----
  
  	; master 
  	; ICW1
! 	mov al, 00010001B			; 边沿触发中断，多片级联
  	out MASTER_ICW1_PORT, al
  
  	call Delay
  
! 	mov al, 0x20				; IRO 中断向量为0x20
  	out MASTER_ICW2_PORT, al
  
  	call Delay
  
! 	mov al, 00000100B			; 从片级联至IR2引脚
  	out MASTER_ICW3_PORT, al
  
  	call Delay
  
! 	mov al, 00010001B			; 特殊全嵌套，非缓冲数据连接，手动结束中断
  	out MASTER_ICW4_PORT, al
  
  	call Delay
  
  	; slave
  	; ICW1
! 	mov al, 00010001B			; 边沿触发中断，多片级联
  	out SLAVE_ICW1_PORT, al
  
  	call Delay
  
! 	mov al, 0x28				; IRO 中断向量为0x28
  	out SLAVE_ICW2_PORT, al
  
  	call Delay
  
! 	mov al, 00000010B			; 级联至主片IR2引脚
  	out SLAVE_ICW3_PORT, al
  
  	call Delay
  
! 	mov al, 00000001B			; 普通全嵌套，非缓冲数据连接，手动结束中断
  	out SLAVE_ICW4_PORT, al
  
  	call Delay
  
  	pop ax
  	ret
  
  ; al --> IMR register value
***************
*** 334,339 ****
--- 325,331 ----
  WriteEOI:
  	push ax
  
+ 	; 结束正在处理的中断
  	mov al, 0x20
  	out dx, al
  
***************
*** 426,432 ****
      leave 
      ret
   
-     
  ; void SendEOI(uint port);
  ;    port ==> 8259A port
  SendEOI:
--- 418,423 ----
***************
*** 438,451 ****
      mov al, 0x20
      out dx, al
      
-     call Delay
-     
      leave
      ret 
      
  [section .s32]
  [bits 32]
! CODE32_SEGMENT:
      mov ax, VideoSelector
      mov gs, ax
      
--- 429,440 ----
  	mov al, 0x20
  	out dx, al
  
  	leave
  	ret
  
  [section .s32]
  [bits 32]
! CODE32_SEG:
  	mov ax, VideoSelector
  	mov gs, ax
  
***************
*** 462,469 ****
      
      jmp dword Code32FlatSelector : BaseOfKernel
  
- ;
- ;
  SetupPage:
      push eax
      push ecx
--- 451,456 ----
***************
*** 513,523 ****
      
  DefaultHandler    equ    DefaultHandlerFunc - $$
  
! Code32SegLen    equ    $ - CODE32_SEGMENT
  
! NoKernel db  "No KERNEL"    
! NKLen    equ ($-NoKernel)
! NoApp    db  "No APP"    
! NALen    equ ($-NoApp)
  
  Buffer db  0
--- 500,510 ----
  
  DefaultHandler equ DefaultHandlerFunc - $$
  
! Code32SegLen	equ $ - CODE32_SEG
  
! noKernel db  "NO KERNEL"	
! NKLen    equ ($-noKernel)
! noApp    db  "NO APP"    
! NALen    equ ($-noApp)
  
  Buffer db  0
\ 文件尾没有换行符
只在 /home/kali/桌面/门徒进阶课/2 - 深入浅出操作系统/test/第80课 - 硬盘驱动程序设计（下）/第80课 - 硬盘驱动程序设计（下）/代码/D.T.OS/ 存在：makefile
只在 . 存在：Makefile
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/memory.c" ./memory.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/memory.c"	2022-08-23 19:44:51.873422000 +0800
--- ./memory.c	2023-07-09 14:02:10.116627407 +0800
***************
*** 1,4 ****
- 
  #include "memory.h"
  #include "utility.h"
  #include "list.h"
--- 1,3 ----
***************
*** 24,30 ****
      uint max;
  } FMemList;
  
- 
  typedef struct
  {
      ListNode head;
--- 23,28 ----
***************
*** 33,39 ****
      byte* ptr;
  } VMemHead;
  
- 
  static FMemList gFMemList = {0};
  static List gVMemList = {0};
  
--- 31,36 ----
***************
*** 71,77 ****
      {
          FMemNode* alloc = gFMemList.node;
          int index = AddrIndex(alloc, gFMemList.nbase);
-         
          ret = AddrOff(gFMemList.ubase, index);
          
          gFMemList.node = alloc->next;
--- 68,73 ----
***************
*** 215,218 ****
      }
  }
  
- 
--- 211,213 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/memory.h" ./memory.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/memory.h"	2022-08-23 19:44:51.873422000 +0800
--- ./memory.h	2023-07-08 11:00:24.172889513 +0800
***************
*** 1,4 ****
- 
  #ifndef MEMORY_H
  #define MEMORY_H
  
--- 1,3 ----
***************
*** 9,11 ****
--- 8,11 ----
  void Free(void* ptr);
  
  #endif
+ 
只在 . 存在：mnt
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/mutex.c" ./mutex.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/mutex.c"	2022-08-23 19:44:51.873422000 +0800
--- ./mutex.c	2023-07-08 11:00:24.172889513 +0800
***************
*** 1,8 ****
- 
  #include "mutex.h"
  #include "memory.h"
  #include "task.h"
! #include "event.h"
  
  static List gMList = {0};
  
--- 1,8 ----
  #include "mutex.h"
  #include "memory.h"
+ #include "screen.h"
  #include "task.h"
! #include "global.h"
  
  static List gMList = {0};
  
***************
*** 16,22 ****
          
          ret->lock = 0;  
          ret->type = type;
-         
          List_Add(&gMList, (ListNode*)ret);
      }
      
--- 16,21 ----
***************
*** 55,61 ****
                  if( IsEqual(mutex->lock, 0) )
                  {
                      List_DelNode(pos);
-                     
                      Free(pos);
                      
                      *result = 1;
--- 54,59 ----
***************
*** 74,80 ****
      if( evt )
      {
          *wait = 1;
-         
          EventSchedule(WAIT, evt);
      }
  }
--- 72,77 ----
***************
*** 88,94 ****
      else
      {
          mutex->lock = 1;
-         
          *wait = 0;
      }
  }
--- 85,90 ----
***************
*** 109,115 ****
      else
      {
          mutex->lock = CurrentTaskId();
-             
          *wait = 0;
      }
  }
--- 105,110 ----
***************
*** 137,143 ****
      Event evt = {MutexEvent, (uint)mutex, 0, 0};
      
      mutex->lock = 0;
-     
      EventSchedule(NOTIFY, &evt);
  }
  
--- 132,137 ----
***************
*** 153,159 ****
      }
  }
  
- 
  void SysExitCritical(Mutex* mutex)
  {
      if( mutex && IsMutexValid(mutex) )
--- 147,152 ----
***************
*** 198,203 ****
          SysDestroyMutex((Mutex*)param1, (uint*)param2);
      }
  }
- 
- 
- 
--- 191,193 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/mutex.h" ./mutex.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/mutex.h"	2022-08-23 19:44:51.873422000 +0800
--- ./mutex.h	2023-07-08 11:00:24.172889513 +0800
***************
*** 1,9 ****
- 
  #ifndef MUTEX_H
  #define MUTEX_H
  
  #include "type.h"
  #include "queue.h"
  
  enum
  {
--- 1,9 ----
  #ifndef MUTEX_H
  #define MUTEX_H
  
  #include "type.h"
  #include "queue.h"
+ #include "list.h"
  
  enum
  {
***************
*** 22,26 ****
  void MutexModInit();
  void MutexCallHandler(uint cmd, uint param1, uint param2);
  
- 
  #endif
--- 22,25 ----
只在 . 存在：objs
只在 . 存在：README.md
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/screen.c" ./screen.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/screen.c"	2022-08-23 19:44:51.877424000 +0800
--- ./screen.c	2023-07-09 14:14:22.896652155 +0800
***************
*** 1,6 ****
! 
! #include "const.h"
  #include "screen.h"
  
  static byte gPosW = 0;
  static byte gPosH = 0;
--- 1,6 ----
! #include "kernel.h"
  #include "screen.h"
+ #include "type.h"
  
  static byte gPosW = 0;
  static byte gPosH = 0;
***************
*** 64,70 ****
              : "ax", "bx", "dx"
          );
      }
-     
      return ret;
  }
  
--- 64,69 ----
***************
*** 86,92 ****
          byte pw = gPosW;
          byte ph = gPosH;
          
!         if( (pw < SCREEN_WIDTH) && (ph < SCREEN_HEIGHT) )
          {
              uint edi = (SCREEN_WIDTH * ph + pw) * 2;
              byte ah = gColor;
--- 85,91 ----
          byte pw = gPosW;
          byte ph = gPosH;
  
!         if(ret = ((pw < SCREEN_WIDTH) && (ph < SCREEN_HEIGHT)))
          {
              uint edi = (SCREEN_WIDTH * ph + pw) * 2;
              byte ah = gColor;
***************
*** 139,169 ****
      return ret;
  }
  
- int PrintIntHex(uint n)
- {
-     int i = 0;
-     int ret = 0;
-     
-     ret += PrintChar('0');
-     ret += PrintChar('x');
-     
-     for(i=28; i>=0; i-=4)
-     {
-         int p = (n >> i) & 0xF;
-         
-         if( p < 10 )
-         {
-             ret += PrintChar('0' + p);
-         }
-         else
-         {
-             ret += PrintChar('A' + p - 10);
-         }
-     }
-     
-     return ret;
- }
- 
  int PrintIntDec(int n)
  {
      int ret = 0;
--- 138,143 ----
***************
*** 171,177 ****
      if( n < 0 )
      {
          ret += PrintChar('-');
-         
          n = -n;
          
          ret += PrintIntDec(n);
--- 145,150 ----
***************
*** 180,186 ****
      {
          if( n < 10 )
          {
!             ret += PrintChar('0' + n);
          }
          else
          {
--- 153,159 ----
      {
          if(n < 10)
          {
!             ret += PrintChar(n + '0');
          }
          else
          {
***************
*** 192,197 ****
--- 165,191 ----
      return ret;
  }
  
+ int PrintIntHex(unsigned int n)
+ {
+     int i = 0;
+     int ret = 0;
      
+     ret += PrintChar('0');
+     ret += PrintChar('x');
      
+     for(i=28; i>=0; i-=4)
+     {
+         int p = (n >> i) & 0xF;
          
+         if( p < 10 )
+         {
+             ret += PrintChar('0' + p);
+         }
+         else
+         {
+             ret += PrintChar('A' + p - 10);
+         }
+     }
+     
+     return ret;
+ }
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/screen.h" ./screen.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/screen.h"	2022-08-23 19:44:51.877424000 +0800
--- ./screen.h	2023-07-08 11:00:24.172889513 +0800
***************
*** 1,9 ****
- 
  #ifndef SCREEN_H
  #define SCREEN_H
  
- #include "type.h"
- 
  #define SCREEN_WIDTH    80
  #define SCREEN_HEIGHT   25
  
--- 1,6 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/shell.c" ./shell.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/shell.c"	2022-08-23 19:44:51.877424000 +0800
--- ./shell.c	2023-07-08 20:00:42.515416973 +0800
***************
*** 1,8 ****
  #include "shell.h"
  #include "syscall.h"
  #include "screen.h"
- #include "utility.h"
  #include "list.h"
  #include "demo1.h"
  #include "demo2.h"
  
--- 1,9 ----
  #include "shell.h"
  #include "syscall.h"
  #include "screen.h"
  #include "list.h"
+ #include "memory.h"
+ 
  #include "demo1.h"
  #include "demo2.h"
  
***************
*** 50,56 ****
      }
      
      SetPrintPos(CMD_START_W, CMD_START_H + 1);
!     PrintString("Pysical Memory: ");
      PrintIntDec(ms);
      PrintString(" MB\n");
  }
--- 51,57 ----
      }
      
      SetPrintPos(CMD_START_W, CMD_START_H + 1);
!     PrintString("Physical Memory: ");
      PrintIntDec(ms);
      PrintString(" MB\n");
  }
***************
*** 142,161 ****
      PrintString(PROMPT);
  }
  
- static void EnterHandler()
- {
-     gKBuf[gKIndex++] = 0;
-     
-     if( (gKIndex > 1) && !DoCmd(gKBuf) )
-     {
-         Unknown(gKBuf);
-     }
-     
-     gKIndex = 0;
-     
-     ResetCmdLine();
- }
- 
  static void BSHandler()
  {
      static int cPtLen = 0;
--- 143,148 ----
***************
*** 178,183 ****
--- 165,184 ----
      }
  }
  
+ static void EnterHandler()
+ {
+     gKBuf[gKIndex++] = 0;
+ 
+     if((gKIndex > 1) && !DoCmd(gKBuf))
+     {
+         Unknown(gKBuf);
+     }
+ 
+     gKIndex = 0;
+ 
+     ResetCmdLine();
+ }
+ 
  static void Handle(char ch, byte vk)
  {
      if(ch)
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/syscall.c" ./syscall.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/syscall.c"	2022-08-23 19:44:51.877424000 +0800
--- ./syscall.c	2023-07-08 13:31:19.072478212 +0800
***************
*** 1,5 ****
- 
  #include "syscall.h"
  #include "app.h"
  
  #define SysCall(type, cmd, param1, param2)    asm volatile(                                  \
--- 1,5 ----
  #include "syscall.h"
+ #include "screen.h"
  #include "app.h"
  
  #define SysCall(type, cmd, param1, param2)    asm volatile(                                  \
***************
*** 26,32 ****
      }
  }
  
- 
  void RegApp(const char* name, void(*tmain)(), byte pri)
  {
      if( name && tmain )
--- 26,31 ----
***************
*** 41,47 ****
      }
  }
  
- 
  uint CreateMutex(uint type)
  {
      volatile uint ret = 0;
--- 40,45 ----
***************
*** 93,96 ****
      
      return ret;
  }
- 
--- 91,93 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/sysinfo.c" ./sysinfo.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/sysinfo.c"	2022-08-23 19:44:51.877424000 +0800
--- ./sysinfo.c	2023-07-08 20:08:00.487397079 +0800
***************
*** 1,14 ****
- 
  #include "sysinfo.h"
! 
! uint gMemSize = 0;
  
  void SysInfoCallHandler(uint cmd, uint param1, uint param2)
  {
      if( cmd == 0 )
      {
          uint* pRet = (uint*)param1;
-         
          *pRet = gMemSize;
      }
  }
--- 1,12 ----
  #include "sysinfo.h"
! #include "screen.h"
! #include "global.h"
  
  void SysInfoCallHandler(uint cmd, uint param1, uint param2)
  {
      if(cmd == 0)
      {
          uint* pRet = (uint*)param1;
          *pRet = gMemSize;
      }
  }
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/task.c" ./task.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/task.c"	2022-08-23 19:44:51.877424000 +0800
--- ./task.c	2023-07-08 13:30:07.928481443 +0800
***************
*** 1,7 ****
  #include "utility.h"
  #include "task.h"
! #include "mutex.h"
  #include "queue.h"
  #include "app.h"
  
  #define MAX_TASK_NUM        16
--- 1,10 ----
  #include "utility.h"
  #include "task.h"
! #include "screen.h"
  #include "queue.h"
+ #include "memory.h"
+ #include "mutex.h"
+ #include "global.h"
  #include "app.h"
  
  #define MAX_TASK_NUM        16
***************
*** 11,26 ****
  #define PID_BASE            0x10
  #define MAX_TIME_SLICE      260
  
- void (* const RunTask)(volatile Task* pt) = NULL;
- void (* const LoadTask)(volatile Task* pt) = NULL;
- 
- volatile Task* gCTaskAddr = NULL; /* DO NOT USE IT DIRECTLY */
- 
  static TaskNode gTaskBuff[MAX_TASK_BUFF_NUM] = {0};
  static Queue gAppToRun = {0};
  static Queue gFreeTaskNode = {0};
  static Queue gReadyTask = {0};
  static Queue gRunningTask = {0};
  static TSS gTSS = {0};
  static TaskNode* gIdleTask = NULL;
  static uint gPid = PID_BASE;
--- 14,26 ----
  #define PID_BASE            0x10
  #define MAX_TIME_SLICE      260
  
  static TaskNode gTaskBuff[MAX_TASK_BUFF_NUM] = {0};
+ 
  static Queue gAppToRun = {0};
  static Queue gFreeTaskNode = {0};
  static Queue gReadyTask = {0};
  static Queue gRunningTask = {0};
+ 
  static TSS gTSS = {0};
  static TaskNode* gIdleTask = NULL;
  static uint gPid = PID_BASE;
***************
*** 125,131 ****
          if( tn )
          {
              AppNode* an = (AppNode*)Queue_Remove(&gAppToRun); 
-             
              InitTask(&tn->task, gPid++, an->app.name, an->app.tmain, an->app.priority);
              
              Queue_Add(&gReadyTask, (QueueNode*)tn);
--- 125,130 ----
***************
*** 205,211 ****
      }
  }
  
- 
  static void WaittingToReady(Queue* wq)
  {
      while( Queue_Length(wq) > 0 )
--- 204,209 ----
***************
*** 370,376 ****
      }
  }
  
- 
  void EventSchedule(uint action, Event* event)
  {
      switch(event->type)
--- 368,373 ----
***************
*** 446,450 ****
  {
      return gCTaskAddr->id;
  }
- 
- 
--- 443,445 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/task.h" ./task.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/task.h"	2022-08-23 19:44:51.877424000 +0800
--- ./task.h	2023-07-08 11:00:24.172889513 +0800
***************
*** 1,4 ****
- 
  #ifndef TASK_H
  #define TASK_H
  
--- 1,3 ----
***************
*** 7,14 ****
  #include "event.h"
  #include "app.h"
  
! typedef struct 
! {
      uint gs;
      uint fs;
      uint es;
--- 6,12 ----
  #include "event.h"
  #include "app.h"
  
! typedef struct {
      uint gs;
      uint fs;
      uint es;
***************
*** 41,47 ****
  
  typedef struct
  {
!     RegValue   rv;
      Descriptor ldt[3];
      ushort     ldtSelector;
      ushort     tssSelector;
--- 39,45 ----
  
  typedef struct
  {
!     RegValue   rv;          // 任务执行状态，即各个寄存器的值
      Descriptor ldt[3];
      ushort     ldtSelector;
      ushort     tssSelector;
***************
*** 51,57 ****
      ushort     total;
      char       name[16]; 
      Queue      wait;
!     byte*      stack;
      Event*     event;
  } Task;
  
--- 49,55 ----
      ushort     total;
      char       name[16];
      Queue      wait;
!     byte*      stack;  // 任务执行使用的栈
      Event*     event;
  } Task;
  
***************
*** 73,81 ****
      NOTIFY
  };
  
- extern void (* const RunTask)(volatile Task* pt);
- extern void (* const LoadTask)(volatile Task* pt);
- 
  void TaskModInit();
  void LaunchTask();
  void Schedule();
--- 71,76 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/utility.c" ./utility.c
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/utility.c"	2022-08-23 19:44:51.881426000 +0800
--- ./utility.c	2023-07-09 14:18:35.604660689 +0800
***************
*** 1,4 ****
- 
  #include "utility.h"
  
  void Delay(int n)
--- 1,3 ----
***************
*** 72,85 ****
          {
              dst[i] = src[i];
          }
- 
-         dst[i] = 0;
      }
  
      if( dAddr > sAddr )
      {
          uint len = StrLen(src);
- 
          len = (len < n) ? len : n;
  
          dst[len] = 0;
--- 71,81 ----
***************
*** 132,137 ****
      
      return ret;
  }
- 
- 
- 
--- 128,130 ----
diff '--color=auto' -c '--color=auto' --ignore-all-space "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/utility.h" ./utility.h
*** "/home/kali/\346\241\214\351\235\242/\351\227\250\345\276\222\350\277\233\351\230\266\350\257\276/2 - \346\267\261\345\205\245\346\265\205\345\207\272\346\223\215\344\275\234\347\263\273\347\273\237/test/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\347\254\25480\350\257\276 - \347\241\254\347\233\230\351\251\261\345\212\250\347\250\213\345\272\217\350\256\276\350\256\241\357\274\210\344\270\213\357\274\211/\344\273\243\347\240\201/D.T.OS/utility.h"	2022-08-23 19:44:51.881426000 +0800
--- ./utility.h	2023-07-09 09:54:00.229933952 +0800
***************
*** 1,4 ****
- 
  #ifndef UTILITY_H
  #define UTILITY_H
  
--- 1,3 ----
***************
*** 33,36 ****
--- 32,36 ----
  char* StrCpy(char* dst, const char* src, uint n);
  int StrLen(const char* s);
  int StrCmp(const char* left, const char* right, uint n);
+ 
  #endif
